import { Node } from '../../lib/vimparser';
import { CompletionItem } from 'vscode-languageserver';
export interface IFunction {
    name: string;
    args: Node[];
    startLine: number;
    startCol: number;
    endLine: number;
    endCol: number;
}
export interface IFunRef {
    name: string;
    args: Node[];
    startLine: number;
    startCol: number;
}
export interface IIdentifier {
    name: string;
    startLine: number;
    startCol: number;
}
export declare class Buffer {
    private uri;
    private workDir;
    private node;
    private globalFunctions;
    private scriptFunctions;
    private globalFunctionRefs;
    private scriptFunctionRefs;
    private globalVariables;
    private localVariables;
    private globalVariableRefs;
    private localVariableRefs;
    private envs;
    private envRefs;
    constructor(uri: string, workDir: string, node: Node);
    getGlobalFunctions(): Record<string, IFunction[]>;
    getGlobalFunctionRefs(): Record<string, IFunRef[]>;
    getScriptFunctions(): Record<string, IFunction[]>;
    getScriptFunctionRefs(): Record<string, IFunRef[]>;
    getGlobalIdentifiers(): Record<string, IIdentifier[]>;
    getGlobalIdentifierRefs(): Record<string, IIdentifier[]>;
    getLocalIdentifiers(): Record<string, IIdentifier[]>;
    getLocalIdentifierRefs(): Record<string, IIdentifier[]>;
    getWorkDir(): string;
    isBelongToWorkdir(workUri: string): boolean;
    updateBufferByNode(node: Node): void;
    private resetProperties;
    private resolveCompletionItems;
    private takeFunction;
    private takeFunctionByRef;
    private takeFuncRef;
    private takeFuncRefByRef;
    private takeFuncRefByExcmd;
    private takeLet;
    private takeFor;
    private takeIdentifier;
    private getDotPos;
    private getDotName;
    private getFunctionItems;
    private getIdentifierItems;
    getGlobalFunctionItems(): CompletionItem[];
    getScriptFunctionItems(): CompletionItem[];
    getGlobalIdentifierItems(): CompletionItem[];
    getLocalIdentifierItems(): CompletionItem[];
    getFunctionLocalIdentifierItems(line: number): CompletionItem[];
    getEnvItems(): CompletionItem[];
}
