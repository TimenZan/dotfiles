"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const coc_nvim_1 = require("coc.nvim");
function activate(context) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        let { subscriptions } = context;
        const config = coc_nvim_1.workspace.getConfiguration('NAME');
        const file = context.asAbsolutePath('./lib/server/index.js');
        let serverOptions = {
            module: file,
            args: ['--node-ipc'],
            transport: coc_nvim_1.TransportKind.ipc,
            options: {
                cwd: coc_nvim_1.workspace.root,
                execArgv: config.get('execArgv', [])
            }
        };
        let clientOptions = {
            documentSelector: [{ scheme: '*' }],
            synchronize: {
                configurationSection: 'NAME'
            },
            outputChannelName: 'NAME'
        };
        let client = new coc_nvim_1.LanguageClient('NAME', 'NAME server', serverOptions, clientOptions);
        client.onReady().then(() => {
        }, e => {
            // tslint:disable-next-line:no-console
            console.error(`NAME server start failed: ${e.message}`);
        });
        subscriptions.push(coc_nvim_1.services.registLanguageClient(client));
    });
}
exports.activate = activate;
//# sourceMappingURL=index.js.map