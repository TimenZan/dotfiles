/// <reference types="node" />
import { Readable } from 'stream';
import { SpawnOptions } from 'child_process';
import { kindPattern } from './patterns';
import { TextDocument, Position } from 'vscode-languageserver';
import { Node } from '../../lib/vimparser';
export declare function isSomeMatchPattern(patterns: kindPattern, line: string): boolean;
export declare function executeFile(input: Readable, command: string, args?: any[], option?: SpawnOptions): Promise<{
    code: number;
    stdout: string;
    stderr: string;
}>;
export declare function pcb(cb: (...args: any[]) => void): (...args: any[]) => Promise<any>;
export declare function findWorkDirectory(filePath: string, rootPatterns: string | string[]): Promise<string>;
export declare function markupSnippets(snippets: string): string;
export declare function getWordFromPosition(doc: TextDocument, position: Position): {
    word: string;
    wordLeft: string;
    wordRight: string;
    left: string;
    right: string;
} | undefined;
export declare function handleParse(textDoc: TextDocument | string): Promise<[Node | null, string]>;
